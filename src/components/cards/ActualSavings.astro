---
// Import interfaces...
import {
  ETransactionNature,
  type IExpensePeriod,
  type ITransaction,
} from '@interfaces/budget';

// Import necessary composables...
import useFormatting from '@composables/useFormatting';

// Define the props.
type Props = {
  period: IExpensePeriod;
  totalCredits: number;
  totalDebits: number;
  transactions: ITransaction[];
};

// Get the props.
const { period, totalCredits, totalDebits, transactions } = Astro.props;

// Get the methods from the composables.
const { toPrice, toTitle } = useFormatting();

// Get the difference between the total credits against total debits.
const surplus = totalCredits - totalDebits;

// Get the total amount of savings transactions.
const savings: number = transactions
  .filter((transaction) => transaction.nature === ETransactionNature.SAVING)
  .reduce((acc, transaction) => acc + transaction.amount, 0);

// Get the total savings.
const totalSavings = surplus + savings;

// Calculate the percentage of the income that was saved and/or not expended.
const percentage: number = (totalSavings / totalCredits) * 100;

// Check if the total amount saved is greater than 0.
const improvement: boolean = totalSavings > 0;
---

<div
  class="transition-shadow ease-in duration-300 h-full rounded-lg px-6 py-6 bg-green-700 flex flex-col justify-between items-end text-right md:px-5 md:py-6 2xl:px-6 hover:shadow-lg"
>
  <div class="mb-2 flex flex-col">
    <h1
      class="flex justify-end gap-2 text-md text-green-100 font-semibold tracking-tight leading-4 md:text-lg"
    >
      {toTitle(period.range)} savings
      {improvement ? <span>ðŸŽ‰</span> : <span>ðŸ”»</span>}
    </h1>
    <h2
      class="text-2xl text-green-50 tracking-tighter font-extrabold md:text-2xl"
    >
      {toPrice(totalSavings, 'ZAR')}
    </h2>
  </div>

  {/* Percentage saved */}
  <p
    class="text-7xl text-green-100 tracking-tighter font-extrabold xl:text-8xl 2xl:text-9xl"
  >
    {percentage.toFixed(1)}%
  </p>
</div>
