---
// Import interfaces...
import {
  ETransactionType,
  type IExpensePeriod,
  type ITransaction,
} from '@interfaces/budget';

// Import necessary composables...
import useFormatting from '@composables/useFormatting';

// Define the
type Props = {
  period: IExpensePeriod;
  income: number;
  transactions: ITransaction[];
};

// Get the
const { period, income, transactions } = Astro.props;

// Get the methods from the composables.
const { toPrice, toTitle } = useFormatting();

// Get the total amount of expenses.
const expenses: number = transactions
  .filter((transaction) => transaction.nature === ETransactionType.DEBIT)
  .reduce((acc, transaction) => acc + transaction.amount, 0);

// Determine how many transactions were actually savings.
const savings: number = transactions
  .filter((transaction) => transaction.nature === ETransactionType.CREDIT)
  .reduce(
    (acc, transaction) =>
      transaction.nature === 'saving' ? acc + transaction.amount : acc,
    0
  );

// Determine the total amount of money saved, as well as the total amount not expended.
const surplus: number = income - expenses + savings;

// Calculate the percentage of the income that was saved and/or not expended.
const percentage: number = (surplus / income) * 100;

// Check if the total amount saved is greater than 0.
const improvement: boolean = surplus > 0;
---

<div
  class="transition-shadow ease-in duration-300 h-full rounded-lg px-6 py-6 bg-green-700 flex flex-col justify-between items-end text-right md:px-5 md:py-6 2xl:px-6 hover:shadow-lg"
>
  <div class="mb-2 flex flex-col">
    <h1
      class="flex justify-end gap-2 text-md text-green-100 font-semibold tracking-tight leading-4 md:text-lg"
    >
      {toTitle(period.range)} savings
      {improvement ? <span>ðŸŽ‰</span> : <span>ðŸ”»</span>}
    </h1>
    <h2
      class="text-2xl text-green-50 tracking-tighter font-extrabold md:text-2xl"
    >
      {toPrice(surplus, 'ZAR')}
    </h2>
  </div>

  {/* Percentage saved */}
  <p
    class="text-7xl text-green-100 tracking-tighter font-extrabold xl:text-8xl 2xl:text-9xl"
  >
    {percentage.toFixed(1)}%
  </p>
</div>
