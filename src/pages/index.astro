---
// Import the interfaces...
import { ETransactionFrequencyPeriod, type IPeriod } from '@interfaces/budget';

// Import the composables...
import useFinances from '@composables/useFinances';

// Import the components
import ActualIncome from '@components/cards/ActualIncome.astro';
import ActualPassiveIncome from '../components/cards/ActualPassiveIncome.astro';
import ActualExpenses from '@components/cards/ActualExpenses.astro';
import ActualSavings from '@components/cards/ActualSavings.astro';
import CreditStream from '@components/cards/CreditStream.astro';
import ProjectedCreditDialog from '@components/dialogs/ProjectedCreditDialog';
import ProjectedDebitDialog from '@components/dialogs/ProjectedDebitDialog';
import ProjectedExpensesCard from '@components/cards/ProjectedExpensesCard.astro';
import ProjectedIncomeCard from '@components/cards/ProjectedIncomeCard.astro';
import TheNavbar from '@layouts/TheNavbar.astro';
import TransactionsSheet from '@components/tables/TransactionSheet';

import user from '../../data/users';

// Define the period.
const period: IPeriod = {
  range: ETransactionFrequencyPeriod.MONTH,
  start: new Date('2022-01-01'),
  end: new Date('2023-12-31'),
};

// Create a user finances object.
const {
  totalProjectedCredits,
  totalProjectedDebits,
  totalActualCredits,
  totalActualDebits,
  creditStreams,
  creditTransactions,
  debitTransactions,
} = useFinances(user.budget, period);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Budgetr" />
    <title>Budgetr</title>
  </head>
  <body>
    <!-- Navigation bar -->
    <header class="sticky top-0 z-10">
      <TheNavbar />
    </header>

    <!-- Content -->
    <div class="relative h-screen">
      <!-- Main content -->
      <main class="h-full pl-6 p-6 md:px-12 md:py-12 2xl:px-20">
        <!-- At a glance -->
        <section>
          <h1 class="mb-6 text-gray-800 text-5xl font-extrabold">
            At a glance
          </h1>

          <div
            class="grid grid-cols-1 gap-4 items-stretch md:grid-cols-4 md:gap-6"
          >
            <div
              class="col-span-1 grid grid-cols-1 gap-4 md:col-span-2 md:grid-cols-2 md:gap-6"
            >
              <!-- Projected Income -->
              <ProjectedIncomeCard
                period={period}
                income={totalProjectedCredits}
              />

              <!-- Projected Expenses -->
              <ProjectedExpensesCard
                period={period}
                income={totalProjectedCredits}
                expenses={totalProjectedDebits}
              />

              <!-- Actual Income -->
              <ActualIncome
                period={period}
                projected={totalProjectedCredits}
                actual={totalActualCredits}
              />

              <!-- Actual Expenses -->
              <ActualExpenses
                period={period}
                projected={totalProjectedCredits}
                income={totalActualCredits}
                actual={totalActualDebits}
              />
              <hr class="block md:hidden my-2" />
            </div>

            <!-- Actual Savings -->
            <div class="col-span-1">
              <ActualSavings
                period={period}
                totalCredits={totalActualCredits}
                totalDebits={totalActualDebits}
                debitTransactions={debitTransactions}
              />
            </div>

            <!-- Actual Investments -->
            <div class="col-span-1">
              <ActualPassiveIncome
                period={period}
                totalCredits={totalActualCredits}
                creditTransactions={creditTransactions}
              />
            </div>
          </div>
        </section>
        <hr class="my-8" />

        <!-- Reports -->
        <section>
          <h1 class="mb-6 text-gray-800 text-5xl font-extrabold">Metrics</h1>

          <!-- Income streams -->
          <section>
            <h1 class="mb-6 text-4xl text-gray-800 font-bold tracking-tight">
              Income Streams
            </h1>

            <div class="grid grid-cols-1 gap-5 md:grid-cols-5">
              {
                creditStreams.map((stream) => (
                  <div class="col-span-1">
                    <CreditStream stream={stream} />
                  </div>
                ))
              }
            </div>
          </section>
          <hr class="my-8" />

          <!-- Transactions -->
          <section class="pb-6">
            <div class="mb-8 flex justify-between items-center">
              <h1 class="text-3xl text-gray-800 font-bold tracking-tight">
                Transactions
              </h1>

              <!-- Transaction actions -->
              <div
                class="fixed bottom-4 right-4 flex flex-col gap-1 md:static md:flex-row md:gap-2"
              >
                <ProjectedCreditDialog
                  natures={user.config.natures.credit}
                  client:visible
                />
                <ProjectedDebitDialog
                  natures={user.config.natures.debit}
                  credits={user.budget.credits}
                  client:visible
                />
                <!-- <NewTransactionDialog
                streams={projectedIncome}
                expenses={projectedExpenses}
                onSubmit={newTransaction}
                client:visible
              /> -->
              </div>
            </div>

            <!-- List all transactions -->
            <div class="rounded bg-gray-100 p-4">
              <TransactionsSheet
                client:visible
                transactions={[...creditTransactions, ...debitTransactions]}
              />
            </div>
          </section>
        </section>
      </main>
    </div>
  </body>
</html>
